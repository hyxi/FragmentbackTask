// Generated by Dagger (https://google.github.io/dagger).
package com.example.user.fragmentbacktask.dagger.module;

import android.location.LocationManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AndroidModule_ProvideLocationManagerFactory implements Factory<LocationManager> {
  private final AndroidModule module;

  public AndroidModule_ProvideLocationManagerFactory(AndroidModule module) {
    this.module = module;
  }

  @Override
  public LocationManager get() {
    return provideInstance(module);
  }

  public static LocationManager provideInstance(AndroidModule module) {
    return proxyProvideLocationManager(module);
  }

  public static AndroidModule_ProvideLocationManagerFactory create(AndroidModule module) {
    return new AndroidModule_ProvideLocationManagerFactory(module);
  }

  public static LocationManager proxyProvideLocationManager(AndroidModule instance) {
    return Preconditions.checkNotNull(
        instance.provideLocationManager(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
