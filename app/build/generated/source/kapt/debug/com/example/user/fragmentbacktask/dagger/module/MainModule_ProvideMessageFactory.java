// Generated by Dagger (https://google.github.io/dagger).
package com.example.user.fragmentbacktask.dagger.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class MainModule_ProvideMessageFactory implements Factory<String> {
  private final MainModule module;

  public MainModule_ProvideMessageFactory(MainModule module) {
    this.module = module;
  }

  @Override
  public String get() {
    return provideInstance(module);
  }

  public static String provideInstance(MainModule module) {
    return proxyProvideMessage(module);
  }

  public static MainModule_ProvideMessageFactory create(MainModule module) {
    return new MainModule_ProvideMessageFactory(module);
  }

  public static String proxyProvideMessage(MainModule instance) {
    return Preconditions.checkNotNull(
        instance.provideMessage(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
