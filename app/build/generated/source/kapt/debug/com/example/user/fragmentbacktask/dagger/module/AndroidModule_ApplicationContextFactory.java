// Generated by Dagger (https://google.github.io/dagger).
package com.example.user.fragmentbacktask.dagger.module;

import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AndroidModule_ApplicationContextFactory implements Factory<Context> {
  private final AndroidModule module;

  public AndroidModule_ApplicationContextFactory(AndroidModule module) {
    this.module = module;
  }

  @Override
  public Context get() {
    return provideInstance(module);
  }

  public static Context provideInstance(AndroidModule module) {
    return proxyApplicationContext(module);
  }

  public static AndroidModule_ApplicationContextFactory create(AndroidModule module) {
    return new AndroidModule_ApplicationContextFactory(module);
  }

  public static Context proxyApplicationContext(AndroidModule instance) {
    return Preconditions.checkNotNull(
        instance.ApplicationContext(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
